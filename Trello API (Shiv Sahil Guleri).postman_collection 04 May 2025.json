{
	"info": {
		"_postman_id": "40103eea-9475-4648-87f2-d8c15746dd73",
		"name": "Trello API (Shiv Sahil Guleri)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33181944"
	},
	"item": [
		{
			"name": "Happy Path",
			"item": [
				{
					"name": "Get all boards (scripts written)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function () {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"",
									"console.log((pm.response.json())[0].Id)",
									"",
									"",
									"let response;",
									"",
									"let arr = [];   // initilizing like this is mandatory. I am pushing my Board IDs here to be delete later on",
									"pm.collectionVariables.unset(\"capturedBoardID\");",
									"",
									"pm.test(\"retrieve list of all the board IDs\", function () {",
									"    response = pm.response.json();  // always parse inside a test",
									"    pm.expect(response).to.be.an(\"array\", \"array of obects\");",
									"    for (let boards of response) {",
									"        pm.expect(boards).to.be.an(\"object\", \"validating list of the object\");",
									"        pm.expect(boards).to.ownProperty(\"id\");",
									"        pm.expect(boards.id).to.be.a(\"string\", \"id data type\");",
									"        arr.push(boards.id)",
									"    }",
									"    pm.collectionVariables.set(\"capturedBoardID\", arr);// this will be used to delete the boards later on",
									"     ",
									"    pm.collectionVariables.set(\"nameIterator\", arr.length); // this will be used in next requests",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.clear();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/members/me/boards?key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"members",
								"me",
								"boards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create board (scripts written)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response;",
									"",
									"pm.test(\"testing for code 200\", function () {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"validate board is created\", function () {",
									"    response = pm.response.json();   // if this code fails then it will fail inside the test and this test is self contained!!",
									"    pm.expect(response).to.be.a(\"object\", \"validating response  is object\");",
									"    pm.expect(response).to.haveOwnProperty(\"name\");",
									"    pm.expect(response.name).to.be.a(\"string\", \"validating name key is string\");",
									"    pm.expect(response.name).to.equals(pm.collectionVariables.get(\"nameOfBoard\") + pm.collectionVariables.get(\"nameIterator\"));",
									"    // retrived boardID once I ensured that board has been created",
									"    pm.collectionVariables.set(\"boardId\", response.id);",
									"})",
									"",
									"",
									"pm.test(\"validate closes status is false\", function () {",
									"    pm.expect(response).to.be.a(\"object\", \"validating response  is object\");",
									"    pm.expect(response).to.haveOwnProperty(\"closed\");",
									"    pm.expect(response.closed).to.be.a(\"boolean\", \"validating closed key is boolean\");",
									"    pm.expect(response.closed).to.equals(false, \"validating that status is NOT closed\");",
									"})",
									"",
									"",
									"pm.test(\"validate permission level is private\", function () {",
									"    pm.expect(response).to.be.a(\"object\", \"validating response is object\");",
									"    pm.expect(response).to.haveOwnProperty(\"prefs\");",
									"    pm.expect(response.prefs).to.haveOwnProperty(\"permissionLevel\");",
									"    pm.expect(response.prefs.permissionLevel).to.be.a(\"string\", \"validating prefs permissionLevel key is string\");",
									"    pm.expect(response.prefs.permissionLevel).to.eql(\"private\", \"validate permission level value\");",
									"})",
									"",
									"",
									"pm.test(\"validate calendar is disabled\", function () {",
									"    // I am skipping usual extra validation. as I have done same above",
									"",
									"    let switcherViewsArr = response.prefs.switcherViews;",
									"    for (let capturedView of switcherViewsArr) {",
									"        if (capturedView.viewType === \"Calendar\") {",
									"            pm.expect(capturedView.enabled).to.eql(false);",
									"            break;",
									"        }",
									"    }",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let nameIter= parseInt(pm.collectionVariables.get(\"nameIterator\"))+1;  // I didnot need parseInt here. works just fine without parseINt",
									"pm.collectionVariables.set(\"nameIterator\", nameIter);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/boards/?name={{nameOfBoard}}{{nameIterator}}&key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "{{nameOfBoard}}{{nameIterator}}"
								},
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								},
								{
									"key": "something",
									"value": "{{$randomFirstName}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function(){",
									"pm.response.to.have.status(200)",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"boards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{boardId}}",
									"description": "this s board ID of recently created board"
								}
							]
						},
						"description": "we are retrieving details of newly created board"
					},
					"response": []
				},
				{
					"name": "Create TODO list (scripts written)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function(){",
									"pm.response.to.have.status(200)",
									"})",
									"",
									"let response;",
									"pm.test(\"validate to do list is created under expected board\", function () {",
									"    response = pm.response.json();   // if this code fails then it will fail inside the test and this test is self contained!!",
									"    pm.expect(response).to.be.a(\"object\", \"validating response  is object\");",
									"    pm.expect(response).to.haveOwnProperty(\"id\");",
									"    pm.expect(response.id).to.be.a(\"string\", \"validating id key is string\");",
									"    pm.expect(response.name).to.be.eql(\"TODO\", \"validating name of the list just created\");",
									"    pm.expect(response.idBoard).to.be.eql(pm.collectionVariables.get(\"boardId\"), \"validating if list created under correct board\");",
									"    // retrived list ID for further usage",
									"    pm.collectionVariables.set(\"todoListId\", response.id);",
									"})",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/lists?name=TODO&idBoard={{boardId}}&key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "TODO"
								},
								{
									"key": "idBoard",
									"value": "{{boardId}}"
								},
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DONE list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function(){",
									"pm.response.to.have.status(200)",
									"})",
									"",
									"// NO extra validating done here. refer TODO list request validation for more examples",
									"pm.collectionVariables.set(\"doneListId\", pm.response.json().id);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/lists?name=DONE&idBoard={{boardId}}&key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "DONE"
								},
								{
									"key": "idBoard",
									"value": "{{boardId}}"
								},
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create card (scripts written)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function(){",
									"pm.response.to.have.status(200)",
									"})",
									"",
									"",
									"",
									"",
									"const response= pm.response.json();",
									"pm.test(\"card creation validation\",function(){",
									"    // I am skipping usual validating before getting data of any key",
									"    pm.expect(pm.collectionVariables.get(\"boardId\")).to.eql(response.idBoard);",
									"    pm.expect(pm.collectionVariables.get(\"todoListId\")).to.eql(response.idList);",
									"    pm.expect(0).to.eql(response.badges.attachmentsByType.trello.card)",
									"    ",
									"    // after validation that card is created only and only then we set the cardID, below",
									"    pm.collectionVariables.set(\"cardId\", pm.response.json().id);",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/cards?name={{$randomFirstName}}&key={{trelloKey}}&token={{trelloToken}}&idList={{todoListId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"cards"
							],
							"query": [
								{
									"key": "name",
									"value": "{{$randomFirstName}}"
								},
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								},
								{
									"key": "idList",
									"value": "{{todoListId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Move card to DONE list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function(){",
									"pm.response.to.have.status(200)",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{doneListId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"cards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								},
								{
									"key": "idList",
									"value": "{{doneListId}}",
									"description": "move to this list"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{cardId}}",
									"description": "id of the card we want moves"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single/Multiple board (scripts written)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 200\", function(){",
									"pm.response.to.have.status(200)",
									"})",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let boards = pm.collectionVariables.get(\"capturedBoardID\");",
									"",
									"pm.collectionVariables.set(\"boardId\", boards.pop());",
									"",
									"pm.collectionVariables.set(\"capturedBoardID\", boards);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"boards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{boardId}}",
									"description": "id of board id to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deleted board (script written)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"testing for code 404\", function(){",
									"pm.response.to.have.status(404)",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"1",
								"boards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{boardId}}",
									"description": "this is Board ID of recetly deleted board"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Testing",
			"item": [
				{
					"name": "NO Auth (check folder level script)",
					"item": [
						{
							"name": "Create board",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomNumber(maxValue){ ",
											"",
											"return Math.floor(Math.random() * maxValue) ",
											"",
											"} ",
											"",
											"console.log(getRandomNumber(10));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/boards/?name={{nameOfBoard}}{{nameIterator}}&key={{trelloKey}}&token=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"boards",
										""
									],
									"query": [
										{
											"key": "name",
											"value": "{{nameOfBoard}}{{nameIterator}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": ""
										},
										{
											"key": "something",
											"value": "{{$randomFirstName}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create TODO list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/lists?name=TODO&idBoard={{boardId}}&key={{trelloKey}}&token=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"lists"
									],
									"query": [
										{
											"key": "name",
											"value": "TODO"
										},
										{
											"key": "idBoard",
											"value": "{{boardId}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create DONE list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/lists?name=DONE&idBoard={{boardId}}&key={{trelloKey}}&token=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"lists"
									],
									"query": [
										{
											"key": "name",
											"value": "DONE"
										},
										{
											"key": "idBoard",
											"value": "{{boardId}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create card",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/cards?name={{$randomFirstName}}&key={{trelloKey}}&token=&idList={{todoListId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"cards"
									],
									"query": [
										{
											"key": "name",
											"value": "{{$randomFirstName}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": ""
										},
										{
											"key": "idList",
											"value": "{{todoListId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move card to DONE list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/cards/:id?key={{trelloKey}}&token=&idList={{doneListId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"cards",
										":id"
									],
									"query": [
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": ""
										},
										{
											"key": "idList",
											"value": "{{doneListId}}",
											"description": "move to this list"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{cardId}}",
											"description": "id of the card we want moves"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"testing for code 401\", function () {",
									"    pm.response.to.have.status(401)",
									"})",
									""
								]
							}
						}
					]
				},
				{
					"name": "Incorrect Auth (check folder level script)",
					"item": [
						{
							"name": "Create board",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/boards/?name={{nameOfBoard}}{{nameIterator}}&key={{trelloKey}}&token=1234",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"boards",
										""
									],
									"query": [
										{
											"key": "name",
											"value": "{{nameOfBoard}}{{nameIterator}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "1234"
										},
										{
											"key": "something",
											"value": "{{$randomFirstName}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create TODO list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/lists?name=TODO&idBoard={{boardId}}&key={{trelloKey}}&token=11112",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"lists"
									],
									"query": [
										{
											"key": "name",
											"value": "TODO"
										},
										{
											"key": "idBoard",
											"value": "{{boardId}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "11112"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create DONE list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/lists?name=DONE&idBoard={{boardId}}&key={{trelloKey}}&token=141241",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"lists"
									],
									"query": [
										{
											"key": "name",
											"value": "DONE"
										},
										{
											"key": "idBoard",
											"value": "{{boardId}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "141241"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create card",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/cards?name={{$randomFirstName}}&key={{trelloKey}}&token=52351142&idList={{todoListId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"cards"
									],
									"query": [
										{
											"key": "name",
											"value": "{{$randomFirstName}}"
										},
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "52351142"
										},
										{
											"key": "idList",
											"value": "{{todoListId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move card to DONE list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/1/cards/:id?key={{trelloKey}}&token=1231212&idList={{doneListId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"1",
										"cards",
										":id"
									],
									"query": [
										{
											"key": "key",
											"value": "{{trelloKey}}"
										},
										{
											"key": "token",
											"value": "1231212"
										},
										{
											"key": "idList",
											"value": "{{doneListId}}",
											"description": "move to this list"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{cardId}}",
											"description": "id of the card we want moves"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"testing for code 401\", function () {",
									"    pm.response.to.have.status(401)",
									"})",
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com"
		},
		{
			"key": "trelloKey",
			"value": "ac4e1376a4452d0e3e71473802ad8309"
		},
		{
			"key": "trelloToken",
			"value": "ATTAf44e2d86fca0067053eb257298e2a51d4e008482c910ce8d7df4dbc03814276b587848BB"
		},
		{
			"key": "boardId",
			"value": "",
			"type": "string"
		},
		{
			"key": "todoListId",
			"value": ""
		},
		{
			"key": "doneListId",
			"value": ""
		},
		{
			"key": "cardId",
			"value": ""
		},
		{
			"key": "nameOfBoard",
			"value": "",
			"type": "string"
		},
		{
			"key": "nameIterator",
			"value": "",
			"type": "string"
		},
		{
			"key": "capturedBoardID",
			"value": ""
		}
	]
}